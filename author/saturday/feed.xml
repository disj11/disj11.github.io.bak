<?xml version="1.0" encoding="utf-8"?>

<feed xmlns="http://www.w3.org/2005/Atom" >
  <generator uri="https://jekyllrb.com/" version="3.7.4">Jekyll</generator>
  <link href="https://disj11.github.io/author/saturday/feed.xml" rel="self" type="application/atom+xml" />
  <link href="https://disj11.github.io/" rel="alternate" type="text/html" />
  <updated>2020-07-24T07:17:11+00:00</updated>
  <id>https://disj11.github.io/author/saturday/feed.xml</id>

  
  
  

  
    <title type="html">Life Log | </title>
  

  
    <subtitle>Record my life</subtitle>
  

  

  
    
      
    
  

  
  

  
    <entry>
      <title type="html">Intellij 에서 WSL 사용</title>
      <link href="https://disj11.github.io/intellij-with-wsl" rel="alternate" type="text/html" title="Intellij 에서 WSL 사용" />
      <published>2020-05-29T13:00:00+00:00</published>
      <updated>2020-05-29T13:00:00+00:00</updated>
      <id>https://disj11.github.io/intellij-with-wsl</id>
      <content type="html" xml:base="https://disj11.github.io/intellij-with-wsl">&lt;h3 id=&quot;소개&quot;&gt;소개&lt;/h3&gt;
&lt;p&gt;Intellij에서 기본 터미널로 WSL 을 사용하는 방법입니다.
WSL은 이미 설치되어 있다고 가정하였습니다.&lt;/p&gt;

&lt;h3 id=&quot;방법&quot;&gt;방법&lt;/h3&gt;
&lt;ol&gt;
  &lt;li&gt;File - Settings - Tools - Terminal&lt;/li&gt;
  &lt;li&gt;Shell path 에 아래 내용 입력&lt;br /&gt;
&lt;code class=&quot;highlighter-rouge&quot;&gt;&quot;C:\Users\&amp;lt;username&amp;gt;\AppData\Local\Microsoft\WindowsApps\ubuntu2004.exe&quot; run&lt;/code&gt;&lt;/li&gt;
  &lt;li&gt;WSL 에 접속하여 &lt;code class=&quot;highlighter-rouge&quot;&gt;~/.profile&lt;/code&gt; 파일의 PATH 부분을 주석 처리 하고, 아래 내용 추가&lt;br /&gt;
&lt;code class=&quot;highlighter-rouge&quot;&gt;PATH=&quot;$HOME/bin:$HOME/.local/bin:/usr/bin:$PATH&quot;&lt;/code&gt;&lt;br /&gt;
왜 수정이 필요한지는 &lt;a href=&quot;https://github.com/microsoft/WSL/issues/1512#issuecomment-303517504&quot;&gt;https://github.com/microsoft/WSL/issues/1512#issuecomment-303517504&lt;/a&gt; 참고&lt;/li&gt;
&lt;/ol&gt;

&lt;h3 id=&quot;노드를-사용하는-경우&quot;&gt;노드를 사용하는 경우&lt;/h3&gt;
&lt;ol&gt;
  &lt;li&gt;File - Settings - Languages &amp;amp; Frameworks - Node.js and npm&lt;/li&gt;
  &lt;li&gt;Node Interpreter에 Add WSL 선택&lt;/li&gt;
  &lt;li&gt;WSL에 설치한 노드 선택
&lt;img src=&quot;https://d3nmt5vlzunoa1.cloudfront.net/webstorm/files/2018/06/select-wsl-in-preferences.png&quot; alt=&quot;참고 이미지&quot; /&gt;&lt;/li&gt;
&lt;/ol&gt;

&lt;h3 id=&quot;참고한-사이트&quot;&gt;참고한 사이트&lt;/h3&gt;
&lt;p&gt;&lt;a href=&quot;https://github.com/microsoft/WSL/issues/1512#issuecomment-303517504&quot;&gt;https://github.com/microsoft/WSL/issues/1512#issuecomment-303517504&lt;/a&gt;
&lt;a href=&quot;https://stackoverflow.com/questions/51912772/how-to-use-wsl-as-default-terminal-in-webstorm-or-any-other-jetbrains-products&quot;&gt;https://stackoverflow.com/questions/51912772/how-to-use-wsl-as-default-terminal-in-webstorm-or-any-other-jetbrains-products&lt;/a&gt;
&lt;a href=&quot;https://d3nmt5vlzunoa1.cloudfront.net/webstorm/files/2018/06/select-wsl-in-preferences.png&quot;&gt;https://d3nmt5vlzunoa1.cloudfront.net/webstorm/files/2018/06/select-wsl-in-preferences.png&lt;/a&gt;&lt;/p&gt;</content>

      
      
      
      
      

      <author>
          <name>Saturday</name>
        
        
      </author>

      

      
        <category term="Intellij" />
      
        <category term="WSL" />
      

      
        <summary type="html">소개 Intellij에서 기본 터미널로 WSL 을 사용하는 방법입니다. WSL은 이미 설치되어 있다고 가정하였습니다.</summary>
      

      
      
    </entry>
  
    <entry>
      <title type="html">자바 이미지 리사이징 후 색상이 변경되는 문제</title>
      <link href="https://disj11.github.io/java-image-resize" rel="alternate" type="text/html" title="자바 이미지 리사이징 후 색상이 변경되는 문제" />
      <published>2020-05-06T18:00:00+00:00</published>
      <updated>2020-05-06T18:00:00+00:00</updated>
      <id>https://disj11.github.io/java-image-resize</id>
      <content type="html" xml:base="https://disj11.github.io/java-image-resize">&lt;h3 id=&quot;소개&quot;&gt;소개&lt;/h3&gt;
&lt;p&gt;java 에서 jpg 이미지를 리사이징 후 색상이 이상하게 변경되어 기록&lt;/p&gt;

&lt;h3 id=&quot;내용&quot;&gt;내용&lt;/h3&gt;
&lt;ol&gt;
  &lt;li&gt;파일 업로드 중 업로드된 이미지의 색상 값이 이상하게 변경되는 것을 확인&lt;/li&gt;
  &lt;li&gt;이미지 리사이징 로직을 제거하니 정상적으로 작동&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://mvnrepository.com/artifact/org.openimaj/image-processing/1.3.10&quot;&gt;OpenIMAJ&lt;/a&gt; 를 사용했던 리사이징 로직을 &lt;a href=&quot;https://mvnrepository.com/artifact/net.coobird/thumbnailator/0.4.11&quot;&gt;Thumbnailator&lt;/a&gt; 를 사용하도록 변경&lt;/li&gt;
  &lt;li&gt;문제가 해결되지 않음.&lt;/li&gt;
  &lt;li&gt;확인 결과 리사이징 후 이미지에 alpha 채널이 추가되는 것을 확인함.&lt;/li&gt;
&lt;/ol&gt;

&lt;h3 id=&quot;처리&quot;&gt;처리&lt;/h3&gt;
&lt;p&gt;알파 채널이 존재하는 경우 png 로 저장되도록 변경함.&lt;/p&gt;
&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;// MultipartFile file
String ext = FilenameUtils.getExtension(file.getOriginalFilename());

// BufferedImage resizeImage
if (resizeImage.getColorModel().hasAlpha()) {
    ext = &quot;png&quot;;
}
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;
&lt;p&gt;알파 채널이 존재하는 경우 알파 채널을 제거 후 jpg 로 저장하여도 됨&lt;/p&gt;
&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;if (resizeImage.getColorModel().hasAlpha()) {
    resizeImage = dropAlphaChannel(resizeImage);
}

public BufferedImage dropAlphaChannel(BufferedImage src) {
     BufferedImage convertedImg = new BufferedImage(src.getWidth(), src.getHeight(), BufferedImage.TYPE_INT_RGB);
     convertedImg.getGraphics().drawImage(src, 0, 0, null);

     return convertedImg;
}
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;[참고 사이트] &lt;br /&gt;
&lt;a href=&quot;https://github.com/rkalla/imgscalr/issues/82&quot; target=&quot;_blank&quot;&gt;https://github.com/rkalla/imgscalr/issues/82&lt;/a&gt;&lt;/p&gt;</content>

      
      
      
      
      

      <author>
          <name>Saturday</name>
        
        
      </author>

      

      
        <category term="Java" />
      
        <category term="Image" />
      

      
        <summary type="html">소개 java 에서 jpg 이미지를 리사이징 후 색상이 이상하게 변경되어 기록</summary>
      

      
      
    </entry>
  
    <entry>
      <title type="html">Isolation level (격리 수준)</title>
      <link href="https://disj11.github.io/isolation-level" rel="alternate" type="text/html" title="Isolation level (격리 수준)" />
      <published>2019-11-16T16:53:00+00:00</published>
      <updated>2019-11-16T16:53:00+00:00</updated>
      <id>https://disj11.github.io/isolation-level</id>
      <content type="html" xml:base="https://disj11.github.io/isolation-level">&lt;h3 id=&quot;isolation&quot;&gt;Isolation&lt;/h3&gt;
&lt;p&gt;Isolation은 트랜잭션에서 일관성이 없는 데이터를 표시하는 방법입니다.
isolation level(격리 수준)이 낮을수록 많은 사용자가 동일한 데이터에 동시에 접근할 수 있는 기능이 향상됩니다.
그러나 이는 잘 못된 데이터를 읽거나 데이터의 업데이트가 손실되는 등과 같은 증상을 유발할 수 있습니다.&lt;/p&gt;

&lt;p&gt;반대로 isolation level이 높을수록 문제가 발생할 확률은 줄어들지만, 동일한 데이터에 동시에 접근할 수 있는 기능은 떨어집니다.
따라서 데이터베이스 시스템은 보통 네 종류의 isolation level을 정의하고, 알맞은 격리 수준을 선택할 수 있도록 하였습니다.&lt;/p&gt;

&lt;h3 id=&quot;용어-정리&quot;&gt;용어 정리&lt;/h3&gt;
&lt;ul&gt;
  &lt;li&gt;Dirty Read&lt;br /&gt;
커밋되지 않은 데이터를 읽을 수 있을 때 발생합니다.&lt;/li&gt;
&lt;/ul&gt;

&lt;table&gt;
  &lt;thead&gt;
    &lt;tr&gt;
      &lt;th&gt;Transaction 1&lt;/th&gt;
      &lt;th&gt;Transaction 2&lt;/th&gt;
    &lt;/tr&gt;
  &lt;/thead&gt;
  &lt;tbody&gt;
    &lt;tr&gt;
      &lt;td&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;SELECT age FROM users WHERE id = 1;&lt;/code&gt;&lt;/td&gt;
      &lt;td&gt; &lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;위 쿼리로 20의 값이 읽어짐&lt;/td&gt;
      &lt;td&gt; &lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt; &lt;/td&gt;
      &lt;td&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;UPDATE users SET age = 21 WHERE id = 1;&lt;/code&gt;&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt; &lt;/td&gt;
      &lt;td&gt;나이를 21로 바꾸고 커밋은 하지 않음&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;SELECT age FROM users WHERE id = 1;&lt;/code&gt;&lt;/td&gt;
      &lt;td&gt; &lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;다시 나이를 읽으면 21살로 읽어짐&lt;/td&gt;
      &lt;td&gt; &lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt; &lt;/td&gt;
      &lt;td&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;ROLLBACK;&lt;/code&gt;&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt; &lt;/td&gt;
      &lt;td&gt;Dirty Read 발생&lt;/td&gt;
    &lt;/tr&gt;
  &lt;/tbody&gt;
&lt;/table&gt;

&lt;ul&gt;
  &lt;li&gt;Non-Repeatable Read&lt;br /&gt;
Transaction1 이 진행되는 동안 두 번 이상의 조회가 발생하고,
그 사이에 Transaction2 에서 데이터의 값을 변경하면 발생합니다.&lt;/li&gt;
&lt;/ul&gt;

&lt;table&gt;
  &lt;thead&gt;
    &lt;tr&gt;
      &lt;th&gt;Transaction 1&lt;/th&gt;
      &lt;th&gt;Transaction 2&lt;/th&gt;
    &lt;/tr&gt;
  &lt;/thead&gt;
  &lt;tbody&gt;
    &lt;tr&gt;
      &lt;td&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;SELECT * FROM users WHERE id = 1;&lt;/code&gt;&lt;/td&gt;
      &lt;td&gt; &lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt; &lt;/td&gt;
      &lt;td&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;UPDATE users SET age = 21 WHERE id = 1;&lt;/code&gt;&lt;br /&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;COMMIT;&lt;/code&gt;&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt; &lt;/td&gt;
      &lt;td&gt;나이를 21로 바꾸고 커밋&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;SELECT * FROM users WHERE id = 1;&lt;/code&gt;&lt;br /&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;COMMIT;&lt;/code&gt;&lt;/td&gt;
      &lt;td&gt; &lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;트랜잭션 진행중 조회 결과가 다르게 나옴&lt;/td&gt;
      &lt;td&gt; &lt;/td&gt;
    &lt;/tr&gt;
  &lt;/tbody&gt;
&lt;/table&gt;

&lt;ul&gt;
  &lt;li&gt;Phantom Read&lt;br /&gt;
트랜잭션 과정에서, 다른 트랜잭션에서 읽은 레코드에 새로운 행이 추가되거나 제거될 때 발생합니다.&lt;/li&gt;
&lt;/ul&gt;

&lt;table&gt;
  &lt;thead&gt;
    &lt;tr&gt;
      &lt;th&gt;Transaction 1&lt;/th&gt;
      &lt;th&gt;Transaction 2&lt;/th&gt;
    &lt;/tr&gt;
  &lt;/thead&gt;
  &lt;tbody&gt;
    &lt;tr&gt;
      &lt;td&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;SELECT * FROM users WHERE age BETWEEN 10 AND 30;&lt;/code&gt;&lt;/td&gt;
      &lt;td&gt; &lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;10 ~ 30살 사이의 사용자 검색&lt;/td&gt;
      &lt;td&gt; &lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt; &lt;/td&gt;
      &lt;td&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;INSERT INTO users(id,name,age) VALUES ( 3, 'Bob', 27 );&lt;/code&gt;&lt;br /&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;COMMIT;&lt;/code&gt;&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt; &lt;/td&gt;
      &lt;td&gt;27살 사용자 추가&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;SELECT * FROM users WHERE age BETWEEN 10 AND 30;&lt;/code&gt;&lt;br /&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;COMMIT;&lt;/code&gt;&lt;/td&gt;
      &lt;td&gt; &lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;Transaction2 에서 추가된 사용자가 같이 나옴.&lt;/td&gt;
      &lt;td&gt; &lt;/td&gt;
    &lt;/tr&gt;
  &lt;/tbody&gt;
&lt;/table&gt;

&lt;h3 id=&quot;isolation-level&quot;&gt;Isolation Level&lt;/h3&gt;
&lt;ol&gt;
  &lt;li&gt;READ UNCOMMITTED&lt;br /&gt;
가장 낮은 레벨의 격리 수준으로 커밋하지 않은 데이터를 다른 트랜잭션에서 조회할 수 있습니다.
    &lt;blockquote&gt;
      &lt;p&gt;&lt;strong&gt;WARNING&lt;/strong&gt;: Dirty Read, Non-Repeatable Read, Phantom Read 가 발생할 수 있습니다.&lt;/p&gt;
    &lt;/blockquote&gt;
  &lt;/li&gt;
  &lt;li&gt;READ COMMITTED
커밋 완료된 데이터만 다른 트랜잭션에서 조회할 수 있습니다.
    &lt;blockquote&gt;
      &lt;p&gt;&lt;strong&gt;WARNING&lt;/strong&gt;: Non-Repeatable Read, Phantom Read 가 발생할 수 있습니다.&lt;/p&gt;
    &lt;/blockquote&gt;
  &lt;/li&gt;
  &lt;li&gt;REPEATABLE READ
트랜잭션 내에서 한번 조회한 데이터는 항상 같은 값으로 조회되는 격리 수준입니다.
    &lt;blockquote&gt;
      &lt;p&gt;&lt;strong&gt;WARNING&lt;/strong&gt;: Phantom Read 가 발생할 수 있습니다.&lt;/p&gt;
    &lt;/blockquote&gt;
  &lt;/li&gt;
  &lt;li&gt;SERIALIZABLE
가장 높은 레벨의 격리 수준으로 위에서 알아본 Dirty Read, Non-Repeatable Read, Phantom Read 이 모두 발생하지 않습니다.
    &lt;blockquote&gt;
      &lt;p&gt;&lt;strong&gt;WARNING&lt;/strong&gt;: 이 수준의 격리 레벨은 동시성 처리 성능이 현저히 떨어집니다.&lt;/p&gt;
    &lt;/blockquote&gt;
  &lt;/li&gt;
&lt;/ol&gt;

&lt;table&gt;
  &lt;thead&gt;
    &lt;tr&gt;
      &lt;th style=&quot;text-align: left&quot;&gt;Isolation Level&lt;/th&gt;
      &lt;th style=&quot;text-align: center&quot;&gt;Dirty reads&lt;/th&gt;
      &lt;th style=&quot;text-align: center&quot;&gt;Non-repeatable reads&lt;/th&gt;
      &lt;th style=&quot;text-align: center&quot;&gt;Phantoms&lt;/th&gt;
    &lt;/tr&gt;
  &lt;/thead&gt;
  &lt;tbody&gt;
    &lt;tr&gt;
      &lt;td style=&quot;text-align: left&quot;&gt;READ COMMITTED&lt;/td&gt;
      &lt;td style=&quot;text-align: center&quot;&gt;V&lt;/td&gt;
      &lt;td style=&quot;text-align: center&quot;&gt;V&lt;/td&gt;
      &lt;td style=&quot;text-align: center&quot;&gt;V&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td style=&quot;text-align: left&quot;&gt;READ COMMITTED&lt;/td&gt;
      &lt;td style=&quot;text-align: center&quot;&gt; &lt;/td&gt;
      &lt;td style=&quot;text-align: center&quot;&gt;V&lt;/td&gt;
      &lt;td style=&quot;text-align: center&quot;&gt;V&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td style=&quot;text-align: left&quot;&gt;REPEATABLE READ&lt;/td&gt;
      &lt;td style=&quot;text-align: center&quot;&gt; &lt;/td&gt;
      &lt;td style=&quot;text-align: center&quot;&gt; &lt;/td&gt;
      &lt;td style=&quot;text-align: center&quot;&gt;V&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td style=&quot;text-align: left&quot;&gt;SERIALIZABLE&lt;/td&gt;
      &lt;td style=&quot;text-align: center&quot;&gt; &lt;/td&gt;
      &lt;td style=&quot;text-align: center&quot;&gt; &lt;/td&gt;
      &lt;td style=&quot;text-align: center&quot;&gt; &lt;/td&gt;
    &lt;/tr&gt;
  &lt;/tbody&gt;
&lt;/table&gt;</content>

      
      
      
      
      

      <author>
          <name>Saturday</name>
        
        
      </author>

      

      
        <category term="Database" />
      
        <category term="Isolation" />
      

      
        <summary type="html">Isolation Isolation은 트랜잭션에서 일관성이 없는 데이터를 표시하는 방법입니다. isolation level(격리 수준)이 낮을수록 많은 사용자가 동일한 데이터에 동시에 접근할 수 있는 기능이 향상됩니다. 그러나 이는 잘 못된 데이터를 읽거나 데이터의 업데이트가 손실되는 등과 같은 증상을 유발할 수 있습니다.</summary>
      

      
      
    </entry>
  
    <entry>
      <title type="html">Spring AOP, Proxy (관점 지향 프로그래밍과 프록시)</title>
      <link href="https://disj11.github.io/Spring-AOP-Proxy" rel="alternate" type="text/html" title="Spring AOP, Proxy (관점 지향 프로그래밍과 프록시)" />
      <published>2019-11-15T12:40:00+00:00</published>
      <updated>2019-11-15T12:40:00+00:00</updated>
      <id>https://disj11.github.io/Spring-AOP-Proxy</id>
      <content type="html" xml:base="https://disj11.github.io/Spring-AOP-Proxy">&lt;h3 id=&quot;spring-aop-aspect-oriented-programming&quot;&gt;Spring AOP (Aspect Oriented Programming)&lt;/h3&gt;
&lt;p&gt;AOP(관점 지향 프로그래밍)는 문제를 해결하기 위한 관심 사항을 핵심 기능과, 공통 부분(Aspect)으로 나누어
공통적인 부분을 각각의 모듈로 만들어 활용하겠다는 것이다. 
스프링에서 사용하는 어노테이션인 &lt;code class=&quot;highlighter-rouge&quot;&gt;@Transaction&lt;/code&gt;, &lt;code class=&quot;highlighter-rouge&quot;&gt;@Async&lt;/code&gt;, &lt;code class=&quot;highlighter-rouge&quot;&gt;@Cacheable&lt;/code&gt; 등은 모두 이러한 AOP를 이용한 것이다.&lt;/p&gt;

&lt;p&gt;이해를 돕기위해 코드를 준비했다.
아래의 코드는 모든 메서드들의 실행 시간을 측정하기 위한 코드이다.&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;public void doSomething() {
    // 시작 시간 체크 (메서드 실행시간 체크를 위한 공통 부분)
    
    // 핵심 기능 (비지니스 로직)
    
    // 끝나는 시간 체크 (메서드 실행시간 체크를 위한 공통 부분)
    // 실행 시간 체크 (메서드 실행시간 체크를 위한 공통 부분)
}
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;우리가 모든 메서드들의 실행시간을 알고 싶다고 한다면,
실제로 메서드가 하는 일인 핵심 기능과, 메서드 실행 시간을 구하기 위한 공통 부분으로 나눌 수 있을 것이다.&lt;/p&gt;

&lt;p&gt;위의 코드의 경우,&lt;/p&gt;
&lt;ol&gt;
  &lt;li&gt;메서드가 실행되기 시작한 시간 구하기&lt;/li&gt;
  &lt;li&gt;메서드 핵심 기능 실행&lt;/li&gt;
  &lt;li&gt;메서드가 완료된 시간 구하기&lt;/li&gt;
  &lt;li&gt;메서드 실행이 완료된 시간 구하기&lt;/li&gt;
  &lt;li&gt;메서드 실행시간 구하기 (메서드 실행이 완료된 시간 - 메서드가 실행된 시간)&lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;1, 2, 4, 5 번이 실행 시간을 구하기 위해 모든 메서드에 들어가야 하는 공통 부분이고,
3번은 메서드마다 구현이 달라지는 핵심 부분일 것이다.
우리는 이렇게 핵심 부분과 공통 부분을 나누고, 공통적인 부분을 모듈로 만드는 것을 AOP 라고 한다.&lt;/p&gt;

&lt;h3 id=&quot;proxy&quot;&gt;Proxy&lt;/h3&gt;
&lt;p&gt;스프링 AOP는 프록시를 이용하여 AOP를 구현하기 때문에, Proxy에 관해서 알아야 한다.
스프링은 공통 부분(Aspect) 적용 대상이 되는 객체에 대한 프록시를 만들어서 제공한다.
비지니스 로직에 접근을 할 때에는 이렇게 만들어진 프록시를 통해 간접적으로 접근하게 된다.&lt;/p&gt;

&lt;p&gt;예를들어 Controller 에서 어떤 서비스의 doSomething() 메서드를 실행한 경우,
스프링은 프록시 객체를 생성하고, 생성된 프록시에서 공통 기능을 실행 후 doSomething() 메서드를 호출하거나,
doSomething() 메서드 실행 후 공통 기능을 실행한다.&lt;/p&gt;

&lt;p&gt;이러한 프록시를 생성하기 위한 방법으로는 JDK Dynamic Proxy와 CGLIB을 이용하는 두 가지 방식이 있다.
지금부터 두 방식의 차이점을 알아보자.&lt;/p&gt;

&lt;h3 id=&quot;jdk-dynamic-proxy&quot;&gt;JDK Dynamic Proxy&lt;/h3&gt;
&lt;p&gt;자바 리플렉션 API가 제공하는 &lt;code class=&quot;highlighter-rouge&quot;&gt;java.lang.reflect.Proxy&lt;/code&gt;를 사용하여 프록시 객체를 생성한다.
이 방식은 인터페이스를 기반으로 프록시 객체를 생성하기 때문에 &lt;strong&gt;인터페이스에 정의되어 있지 않은 메서드는 AOP가 적용되지 않는다.&lt;/strong&gt;&lt;/p&gt;

&lt;h3 id=&quot;cglib&quot;&gt;CGLIB&lt;/h3&gt;
&lt;p&gt;CGLIB는 인터페이스에 정의되어 있지 않더라도 프록시 객체를 생성할 수 있다.
하지만, CGLIB는 대상 클래스를 상속받아 프록시를 구현하기 때문에, &lt;strong&gt;클래스가 final인 경우에는 프록시를 생성할 수 없다.&lt;/strong&gt;&lt;/p&gt;

&lt;h3 id=&quot;spring-aop-주의사항&quot;&gt;Spring AOP 주의사항&lt;/h3&gt;
&lt;p&gt;&lt;strong&gt;같은 클래스 내에 있는 메서드를 호출하는 경우&lt;/strong&gt; 프록시를 거쳐가지 않기 때문에, &lt;strong&gt;AOP가 적용되지 않는다.&lt;/strong&gt;&lt;/p&gt;</content>

      
      
      
      
      

      <author>
          <name>Saturday</name>
        
        
      </author>

      

      
        <category term="Spring" />
      
        <category term="AOP" />
      
        <category term="Proxy" />
      

      
        <summary type="html">Spring AOP (Aspect Oriented Programming) AOP(관점 지향 프로그래밍)는 문제를 해결하기 위한 관심 사항을 핵심 기능과, 공통 부분(Aspect)으로 나누어 공통적인 부분을 각각의 모듈로 만들어 활용하겠다는 것이다. 스프링에서 사용하는 어노테이션인 @Transaction, @Async, @Cacheable 등은 모두 이러한 AOP를 이용한 것이다.</summary>
      

      
      
    </entry>
  
    <entry>
      <title type="html">스프링 부트 문서 번역 (Spring Boot Reference Documentation)</title>
      <link href="https://disj11.github.io/spring-boot-reference-docs" rel="alternate" type="text/html" title="스프링 부트 문서 번역 (Spring Boot Reference Documentation)" />
      <published>2019-10-29T20:48:00+00:00</published>
      <updated>2019-10-29T20:48:00+00:00</updated>
      <id>https://disj11.github.io/spring-boot-reference-docs</id>
      <content type="html" xml:base="https://disj11.github.io/spring-boot-reference-docs">&lt;h3 id=&quot;소개&quot;&gt;소개&lt;/h3&gt;
&lt;p&gt;영어 공부를 위하여 &lt;a href=&quot;https://docs.spring.io/spring-boot/docs/2.2.0.RELEASE/reference/html/index.html&quot;&gt;Spring Boot Reference Documentation&lt;/a&gt;
를 번역한 프로젝트입니다. 차근차근 진행할 예정입니다.&lt;/p&gt;

&lt;p&gt;오역이 있을 수 있으니 참고만 해주세요.&lt;/p&gt;

&lt;p&gt;&lt;a href=&quot;https://github.com/disj11/spring-boot-reference&quot;&gt;스프링 부트 문서 번역본 Github Repo&lt;/a&gt;&lt;/p&gt;

&lt;hr /&gt;

&lt;p&gt;The reference documentation consists of the following sections:&lt;br /&gt;
이 문서는 다음과 같은 섹션으로 구성되어 있습니다.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Legal&lt;/strong&gt;&lt;br /&gt;
Legal information.&lt;br /&gt;
법률 정보&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Documentation Overview&lt;/strong&gt;&lt;br /&gt;
About the Documentation, Getting Help, First Steps, and more.&lt;br /&gt;
설명서, 도움말, 첫 단계 등에 대한 정보&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;&lt;a href=&quot;https://github.com/disj11/spring-boot-reference/blob/master/Getting_Stated.md&quot;&gt;Getting Started&lt;/a&gt;&lt;/strong&gt;&lt;br /&gt;
Introducing Spring Boot, System Requirements, Servlet Containers, Installing Spring Boot, Developing Your First Spring Boot Application&lt;br /&gt;
스프링 부트 소개, 시스템 요구사항, 서블릿 컨테이너, 스프링 부트 설치, 첫번째 스프링 부트 어플리케이션 개발&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;&lt;a href=&quot;https://github.com/disj11/spring-boot-reference/blob/master/Using_Spring_Boot.md&quot;&gt;Using Spring Boot&lt;/a&gt;&lt;/strong&gt;&lt;br /&gt;
Build Systems, Structuring Your Code, Configuration, Spring Beans and Dependency Injection, and more.&lt;br /&gt;
빌드 시스템, 코드 구조, 구성, 스프링 Beans, 의존성 주입 등&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Spring Boot Features&lt;/strong&gt;&lt;br /&gt;
Profiles, Logging, Security, Caching, Spring Integration, Testing, and more.&lt;br /&gt;
프로파일, 로깅, 보안, 캐싱, 스프링 통합, 테스팅 등&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Spring Boot Actuator&lt;/strong&gt;&lt;br /&gt;
Monitoring, Metrics, Auditing, and more.&lt;br /&gt;
모니터링, Metrics, Auditing 등&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Deploying Spring Boot Applications&lt;/strong&gt;&lt;br /&gt;
Deploying to the Cloud, Installing as a Unix application.&lt;br /&gt;
클라우드로 배포, 유닉스 어플리케이션으로 설치&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Spring Boot CLI&lt;/strong&gt;&lt;br /&gt;
Installing the CLI, Using the CLI, Configuring the CLI, and more.&lt;br /&gt;
CLI 설치, CLI 사용, CLI 구성 등&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Build Tool Plugins&lt;/strong&gt;&lt;br /&gt;
Maven Plugin, Gradle Plugin, Antlib, and more.&lt;br /&gt;
Maven 플러그인, Gradle 플러그인, Antlib 등&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;“How-to” Guides&lt;/strong&gt;&lt;br /&gt;
Application Development, Configuration, Embedded Servers, Data Access, and many more.&lt;br /&gt;
어플리케이션 배포, 구성, 내장 서버, 데이터 접근 등&lt;/p&gt;

&lt;hr /&gt;

&lt;p&gt;The reference documentation has the following appendices:&lt;br /&gt;
이 문서에는 다음과 같은 부록이 있습니다.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Application Properties&lt;/strong&gt;&lt;br /&gt;
Common application properties that can be used to configure your application.&lt;br /&gt;
어플리케이션을 구성하는데 사용할 수 있는 공통 속성&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Configuration Metadata&lt;/strong&gt;&lt;br /&gt;
Metadata used to describe configuration properties.&lt;br /&gt;
구성 속성을 설명하는데 사용하는 메타데이터&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Auto-configuration Classes&lt;/strong&gt;&lt;br /&gt;
Auto-configuration classes provided by Spring Boot.&lt;br /&gt;
스프링 부트에서 제공하는 Auto-configuration classes&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Test Auto-configuration Annotations&lt;/strong&gt;&lt;br /&gt;
Test-autoconfiguration annotations used to test slices of your application.&lt;br /&gt;
단위 테스트를 위해 사용하는 Test-autoconfiguration 어노테이션&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Executable Jars&lt;/strong&gt;&lt;br /&gt;
Spring Boot’s executable jars, their launchers, and their format.&lt;br /&gt;
스프링 부트의 실행가능한 jar, launchers, 포맷&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Dependency Versions&lt;/strong&gt;&lt;br /&gt;
Details of the dependencies that are managed by Spring Boot.&lt;br /&gt;
스트링 부트가 관리하는 의존성의 세부 정보&lt;/p&gt;</content>

      
      
      
      
      

      <author>
          <name>Saturday</name>
        
        
      </author>

      

      
        <category term="Toy Project" />
      

      
        <summary type="html">소개 영어 공부를 위하여 Spring Boot Reference Documentation 를 번역한 프로젝트입니다. 차근차근 진행할 예정입니다.</summary>
      

      
      
    </entry>
  
    <entry>
      <title type="html">애니메이션 정보 확인 사이트 V2 (Toy Project)</title>
      <link href="https://disj11.github.io/anilist-v2" rel="alternate" type="text/html" title="애니메이션 정보 확인 사이트 V2 (Toy Project)" />
      <published>2019-10-04T18:40:00+00:00</published>
      <updated>2019-10-04T18:40:00+00:00</updated>
      <id>https://disj11.github.io/anilist-v2</id>
      <content type="html" xml:base="https://disj11.github.io/anilist-v2">&lt;h3 id=&quot;소개&quot;&gt;소개&lt;/h3&gt;
&lt;p&gt;연습삼아 만들어 본 애니메이션 정보 확인 사이트&lt;/p&gt;

&lt;h3 id=&quot;사용-기술&quot;&gt;사용 기술&lt;/h3&gt;
&lt;p&gt;react, apollo, graphql, ant design&lt;/p&gt;

&lt;h3 id=&quot;사이트-url&quot;&gt;사이트 URL&lt;/h3&gt;
&lt;p&gt;&lt;a href=&quot;https://anilist-client.vercel.app/&quot;&gt;애니메이션 정보 검색 사이트&lt;/a&gt; &lt;br /&gt;
&lt;del&gt;&lt;a href=&quot;https://disj11.github.com/anilist-client&quot;&gt;애니메이션 정보 검색 사이트&lt;/a&gt;&lt;/del&gt; &lt;br /&gt;
&lt;a href=&quot;https://github.com/disj11/anilist-client&quot;&gt;Git repository&lt;/a&gt;&lt;/p&gt;</content>

      
      
      
      
      

      <author>
          <name>Saturday</name>
        
        
      </author>

      

      
        <category term="Toy Project" />
      

      
        <summary type="html">소개 연습삼아 만들어 본 애니메이션 정보 확인 사이트</summary>
      

      
      
    </entry>
  
    <entry>
      <title type="html">Trie (트라이)</title>
      <link href="https://disj11.github.io/trie" rel="alternate" type="text/html" title="Trie (트라이)" />
      <published>2019-08-15T16:01:00+00:00</published>
      <updated>2019-08-15T16:01:00+00:00</updated>
      <id>https://disj11.github.io/trie</id>
      <content type="html" xml:base="https://disj11.github.io/trie">&lt;h3 id=&quot;소개&quot;&gt;소개&lt;/h3&gt;
&lt;p&gt;트라이라는 자료구조의 명칭은 Re&lt;strong&gt;trie&lt;/strong&gt;val(탐색)에서 유래되었다고 한다.
유래에서 알 수 있 듯 트라이는 문자열을 효율적으로 검색하기 위한 자료구조 중 하나이다.&lt;/p&gt;

&lt;h3 id=&quot;구조&quot;&gt;구조&lt;/h3&gt;
&lt;p&gt;트라이는 트리 구조로 만들 수 있다.
우리가 영어사전에서 tea라는 단어를 찾는다고 가정해보자. 우리는 가장 먼저 사전의 ‘t’ 란을 찾을 것이다. 그 후 차례로 ‘e’, ‘a’ 를 찾아 tea라는 단어를 찾을 수 있다. 이를 논리적으로 표현한 구조가 바로 트라이이다.
&lt;img src=&quot;/assets/images/trie_example.png&quot; alt=&quot;트라이 구조&quot; /&gt;
이러한 구조는 문자열 탐색을 위해 많은 공간을 필요로 하지만 문자열의 길이가 m 이라면 O(m) 의 시간복잡도를 갖는 초고속 탐색을 가능하게 한다.&lt;/p&gt;

&lt;h3 id=&quot;trie-in-java&quot;&gt;Trie in Java&lt;/h3&gt;
&lt;p&gt;트라이의 구현은 &lt;a href=&quot;https://www.baeldung.com/trie-java&quot; target=&quot;_blank&quot;&gt;여기&lt;/a&gt;에서 확인할 수 있다.&lt;/p&gt;</content>

      
      
      
      
      

      <author>
          <name>Saturday</name>
        
        
      </author>

      

      
        <category term="Data Structure" />
      
        <category term="Trie" />
      

      
        <summary type="html">소개 트라이라는 자료구조의 명칭은 Retrieval(탐색)에서 유래되었다고 한다. 유래에서 알 수 있 듯 트라이는 문자열을 효율적으로 검색하기 위한 자료구조 중 하나이다.</summary>
      

      
      
    </entry>
  
    <entry>
      <title type="html">MyBatis 1:1, 1:N 관계 매핑 (association, collection)</title>
      <link href="https://disj11.github.io/relationship-in-mybatis" rel="alternate" type="text/html" title="MyBatis 1:1, 1:N 관계 매핑 (association, collection)" />
      <published>2019-07-24T21:13:00+00:00</published>
      <updated>2019-07-24T21:13:00+00:00</updated>
      <id>https://disj11.github.io/relationship-in-mybatis</id>
      <content type="html" xml:base="https://disj11.github.io/relationship-in-mybatis">&lt;h3 id=&quot;소개&quot;&gt;소개&lt;/h3&gt;
&lt;p&gt;MyBatis 에서 1:1, 1:N 관계를 매핑하기 위해서는 어떻게 해야할까?
1:1 관계 매핑을 위한 association, 1:N 관계 매핑을 위한 collection 에 대해 알아보자.&lt;/p&gt;

&lt;h3 id=&quot;예제&quot;&gt;예제&lt;/h3&gt;
&lt;p&gt;게시판을 만든다고 가정하고 예제 코드를 작성해보았다.
(코드 라인 수를 줄이기 위해 import 구문은 생략)&lt;/p&gt;

&lt;h3 id=&quot;account&quot;&gt;Account&lt;/h3&gt;
&lt;p&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;Account Table&lt;/code&gt;&lt;/p&gt;
&lt;div class=&quot;language-sql highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;k&quot;&gt;create&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;table&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;account&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;
    &lt;span class=&quot;n&quot;&gt;id&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;primary&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;key&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;
    &lt;span class=&quot;n&quot;&gt;name&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;text&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;Account.java&lt;/code&gt;&lt;/p&gt;
&lt;div class=&quot;language-java highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;kn&quot;&gt;package&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;com&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;exam&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;mybatis&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;domain&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;;&lt;/span&gt;

&lt;span class=&quot;nd&quot;&gt;@Getter&lt;/span&gt;
&lt;span class=&quot;nd&quot;&gt;@Setter&lt;/span&gt;
&lt;span class=&quot;nd&quot;&gt;@ToString&lt;/span&gt;
&lt;span class=&quot;kd&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;kd&quot;&gt;class&lt;/span&gt; &lt;span class=&quot;nc&quot;&gt;Account&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;{&lt;/span&gt;
    &lt;span class=&quot;kd&quot;&gt;private&lt;/span&gt; &lt;span class=&quot;kt&quot;&gt;int&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;id&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;;&lt;/span&gt;
    &lt;span class=&quot;kd&quot;&gt;private&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;String&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;name&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;;&lt;/span&gt;
&lt;span class=&quot;o&quot;&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;AccountRepository.java&lt;/code&gt;&lt;/p&gt;
&lt;div class=&quot;language-java highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;kn&quot;&gt;package&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;com&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;exam&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;mybatis&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;repository&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;;&lt;/span&gt;

&lt;span class=&quot;nd&quot;&gt;@Repository&lt;/span&gt;
&lt;span class=&quot;kd&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;kd&quot;&gt;interface&lt;/span&gt; &lt;span class=&quot;nc&quot;&gt;AccountRepository&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;{&lt;/span&gt;
    &lt;span class=&quot;n&quot;&gt;Board&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;findOne&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;kt&quot;&gt;int&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;id&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;);&lt;/span&gt;
&lt;span class=&quot;o&quot;&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;AccountRepository.xml&lt;/code&gt;&lt;/p&gt;
&lt;div class=&quot;language-xml highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;cp&quot;&gt;&amp;lt;?xml version=&quot;1.0&quot; encoding=&quot;UTF-8&quot; ?&amp;gt;&lt;/span&gt;
&lt;span class=&quot;cp&quot;&gt;&amp;lt;!DOCTYPE mapper
PUBLIC &quot;-//mybatis.org//DTD Mapper 3.0//EN&quot;
&quot;http://mybatis.org/dtd/mybatis-3-mapper.dtd&quot;&amp;gt;&lt;/span&gt;
&lt;span class=&quot;nt&quot;&gt;&amp;lt;mapper&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;namespace=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;com.exam.mybatis.repository.AccountRepository&quot;&lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;&amp;gt;&lt;/span&gt;
    &lt;span class=&quot;nt&quot;&gt;&amp;lt;select&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;id=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;findOne&quot;&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;resultType=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;com.exam.mybatis.repository.Account&quot;&lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;&amp;gt;&lt;/span&gt;
        select * from account where id = #{id}
    &lt;span class=&quot;nt&quot;&gt;&amp;lt;/select&amp;gt;&lt;/span&gt;
&lt;span class=&quot;nt&quot;&gt;&amp;lt;/mapper&amp;gt;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;h3 id=&quot;board&quot;&gt;Board&lt;/h3&gt;
&lt;p&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;Board Table&lt;/code&gt;&lt;/p&gt;
&lt;div class=&quot;language-sql highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;k&quot;&gt;create&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;table&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;board&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;
    &lt;span class=&quot;n&quot;&gt;id&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;primary&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;key&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;
    &lt;span class=&quot;n&quot;&gt;title&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;text&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;
    &lt;span class=&quot;n&quot;&gt;contents&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;text&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;
    &lt;span class=&quot;n&quot;&gt;writer_id&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;integer&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;Board.java&lt;/code&gt;&lt;/p&gt;
&lt;div class=&quot;language-java highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;kn&quot;&gt;package&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;com&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;exam&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;mybatis&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;domain&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;;&lt;/span&gt;

&lt;span class=&quot;nd&quot;&gt;@Getter&lt;/span&gt;
&lt;span class=&quot;nd&quot;&gt;@Setter&lt;/span&gt;
&lt;span class=&quot;nd&quot;&gt;@ToString&lt;/span&gt;
&lt;span class=&quot;kd&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;kd&quot;&gt;class&lt;/span&gt; &lt;span class=&quot;nc&quot;&gt;Board&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;{&lt;/span&gt;
    &lt;span class=&quot;kd&quot;&gt;private&lt;/span&gt; &lt;span class=&quot;kt&quot;&gt;int&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;id&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;;&lt;/span&gt;
    &lt;span class=&quot;kd&quot;&gt;private&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;String&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;title&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;;&lt;/span&gt;
    &lt;span class=&quot;kd&quot;&gt;private&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;String&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;contents&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;;&lt;/span&gt;
    &lt;span class=&quot;kd&quot;&gt;private&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;Account&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;writer&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;;&lt;/span&gt;
    &lt;span class=&quot;kd&quot;&gt;private&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;List&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;Comment&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;&amp;gt;&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;comments&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;;&lt;/span&gt;
&lt;span class=&quot;o&quot;&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;BoardRepository.java&lt;/code&gt;&lt;/p&gt;
&lt;div class=&quot;language-java highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;kn&quot;&gt;package&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;com&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;exam&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;mybatis&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;repository&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;;&lt;/span&gt;

&lt;span class=&quot;nd&quot;&gt;@Repository&lt;/span&gt;
&lt;span class=&quot;kd&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;kd&quot;&gt;interface&lt;/span&gt; &lt;span class=&quot;nc&quot;&gt;BoardRepository&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;{&lt;/span&gt;
    &lt;span class=&quot;n&quot;&gt;Board&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;findOne&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;kt&quot;&gt;int&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;id&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;);&lt;/span&gt;
&lt;span class=&quot;o&quot;&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;BoardRepository.xml&lt;/code&gt;&lt;/p&gt;
&lt;div class=&quot;language-xml highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;cp&quot;&gt;&amp;lt;?xml version=&quot;1.0&quot; encoding=&quot;UTF-8&quot; ?&amp;gt;&lt;/span&gt;
&lt;span class=&quot;cp&quot;&gt;&amp;lt;!DOCTYPE mapper
PUBLIC &quot;-//mybatis.org//DTD Mapper 3.0//EN&quot;
&quot;http://mybatis.org/dtd/mybatis-3-mapper.dtd&quot;&amp;gt;&lt;/span&gt;
&lt;span class=&quot;nt&quot;&gt;&amp;lt;mapper&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;namespace=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;com.exam.mybatis.repository.BoardRepository&quot;&lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;&amp;gt;&lt;/span&gt;
    &lt;span class=&quot;nt&quot;&gt;&amp;lt;select&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;id=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;findOne&quot;&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;resultMap=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;Board&quot;&lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;&amp;gt;&lt;/span&gt;
        select * from board where id = #{id}
    &lt;span class=&quot;nt&quot;&gt;&amp;lt;/select&amp;gt;&lt;/span&gt;
    &lt;span class=&quot;nt&quot;&gt;&amp;lt;resultMap&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;id=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;Board&quot;&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;type=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;com.exam.mybatis.domain.Board&quot;&lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;&amp;gt;&lt;/span&gt;
        &lt;span class=&quot;nt&quot;&gt;&amp;lt;association&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;property=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;writer&quot;&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;column=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;writer_id&quot;&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;select=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;com.exam.mybatis.repository.AccountRepository.findOne&quot;&lt;/span&gt; &lt;span class=&quot;nt&quot;&gt;/&amp;gt;&lt;/span&gt;
        &lt;span class=&quot;nt&quot;&gt;&amp;lt;collection&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;property=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;comments&quot;&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;column=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;id&quot;&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;select=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;com.exam.mybatis.repository.CommentRepository.findByOrderId&quot;&lt;/span&gt; &lt;span class=&quot;nt&quot;&gt;/&amp;gt;&lt;/span&gt;
    &lt;span class=&quot;nt&quot;&gt;&amp;lt;/resultMap&amp;gt;&lt;/span&gt;
&lt;span class=&quot;nt&quot;&gt;&amp;lt;/mapper&amp;gt;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;h3 id=&quot;comment&quot;&gt;Comment&lt;/h3&gt;
&lt;p&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;Comment Table&lt;/code&gt;&lt;/p&gt;
&lt;div class=&quot;language-sql highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;k&quot;&gt;create&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;table&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;comment&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;
    &lt;span class=&quot;n&quot;&gt;id&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;primary&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;key&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;
    &lt;span class=&quot;n&quot;&gt;board_id&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;integer&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;
    &lt;span class=&quot;n&quot;&gt;contents&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;text&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;Comment.java&lt;/code&gt;&lt;/p&gt;
&lt;div class=&quot;language-java highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;kn&quot;&gt;package&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;com&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;exam&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;mybatis&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;domain&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;;&lt;/span&gt;

&lt;span class=&quot;nd&quot;&gt;@Getter&lt;/span&gt;
&lt;span class=&quot;nd&quot;&gt;@Setter&lt;/span&gt;
&lt;span class=&quot;nd&quot;&gt;@ToString&lt;/span&gt;
&lt;span class=&quot;kd&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;kd&quot;&gt;class&lt;/span&gt; &lt;span class=&quot;nc&quot;&gt;Comment&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;{&lt;/span&gt;
    &lt;span class=&quot;kd&quot;&gt;private&lt;/span&gt; &lt;span class=&quot;kt&quot;&gt;int&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;id&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;;&lt;/span&gt;
    &lt;span class=&quot;kd&quot;&gt;private&lt;/span&gt; &lt;span class=&quot;kt&quot;&gt;int&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;boardId&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;;&lt;/span&gt;
    &lt;span class=&quot;kd&quot;&gt;private&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;String&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;contents&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;;&lt;/span&gt;
&lt;span class=&quot;o&quot;&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;CommentRepository.java&lt;/code&gt;&lt;/p&gt;
&lt;div class=&quot;language-java highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;kn&quot;&gt;package&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;com&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;exam&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;mybatis&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;repository&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;;&lt;/span&gt;

&lt;span class=&quot;nd&quot;&gt;@Repository&lt;/span&gt;
&lt;span class=&quot;kd&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;kd&quot;&gt;interface&lt;/span&gt; &lt;span class=&quot;nc&quot;&gt;CommentRepository&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;{&lt;/span&gt;
    &lt;span class=&quot;n&quot;&gt;List&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;Comment&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;&amp;gt;&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;findByOrderId&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;kt&quot;&gt;int&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;orderId&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;);&lt;/span&gt;
&lt;span class=&quot;o&quot;&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;CommentRepository.xml&lt;/code&gt;&lt;/p&gt;
&lt;div class=&quot;language-xml highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;cp&quot;&gt;&amp;lt;?xml version=&quot;1.0&quot; encoding=&quot;UTF-8&quot; ?&amp;gt;&lt;/span&gt;
&lt;span class=&quot;cp&quot;&gt;&amp;lt;!DOCTYPE mapper
PUBLIC &quot;-//mybatis.org//DTD Mapper 3.0//EN&quot;
&quot;http://mybatis.org/dtd/mybatis-3-mapper.dtd&quot;&amp;gt;&lt;/span&gt;
&lt;span class=&quot;nt&quot;&gt;&amp;lt;mapper&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;namespace=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;com.exam.mybatis.repository.CommentRepository&quot;&lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;&amp;gt;&lt;/span&gt;
    &lt;span class=&quot;nt&quot;&gt;&amp;lt;select&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;id=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;findByOrderId&quot;&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;resultType=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;com.exam.mybatis.domain.Comment&quot;&lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;&amp;gt;&lt;/span&gt;
        select * from comment where board_id = #{boardId}
    &lt;span class=&quot;nt&quot;&gt;&amp;lt;/select&amp;gt;&lt;/span&gt;
&lt;span class=&quot;nt&quot;&gt;&amp;lt;/mapper&amp;gt;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;</content>

      
      
      
      
      

      <author>
          <name>Saturday</name>
        
        
      </author>

      

      
        <category term="Mybatis" />
      

      
        <summary type="html">소개 MyBatis 에서 1:1, 1:N 관계를 매핑하기 위해서는 어떻게 해야할까? 1:1 관계 매핑을 위한 association, 1:N 관계 매핑을 위한 collection 에 대해 알아보자.</summary>
      

      
      
    </entry>
  
    <entry>
      <title type="html">Pipeline Pattern (파이프라인 패턴)</title>
      <link href="https://disj11.github.io/pipeline-pattern" rel="alternate" type="text/html" title="Pipeline Pattern (파이프라인 패턴)" />
      <published>2019-07-09T23:33:00+00:00</published>
      <updated>2019-07-09T23:33:00+00:00</updated>
      <id>https://disj11.github.io/pipeline-pattern</id>
      <content type="html" xml:base="https://disj11.github.io/pipeline-pattern">&lt;h3 id=&quot;사용-이유&quot;&gt;사용 이유&lt;/h3&gt;
&lt;p&gt;이니시스 빌링 결제 구현 중 &lt;code class=&quot;highlighter-rouge&quot;&gt;본인 인증 -&amp;gt; 빌링 키 발급 -&amp;gt; 빌링 키로 결제&lt;/code&gt;
이렇게 세 가지 단계로 진행되는 파이프라인을 구성해야 했다.
본인 인증 결과가 빌링 키 발급의 input 이 되고, 빌링 키 발급의 결과가 빌링 키 결제의 input 이 되는 식이었다.
또 해당 파이프라인 전후로 다른 작업들의 추가 / 삭제가 간편해야 했다. 위의 조건을 만족하는 방법을 찾던 중
&lt;a href=&quot;https://medium.com/@deepakbapat/the-pipeline-design-pattern-in-java-831d9ce2fe21&quot; target=&quot;_blank&quot;&gt;이 글&lt;/a&gt;을
발견하여, 시스템에 적용하였는데 꽤나 유용한 것 같아 글을 남기기로 하였다.&lt;/p&gt;

&lt;h3 id=&quot;step-interface&quot;&gt;Step Interface&lt;/h3&gt;
&lt;p&gt;파이프라인 각각의 단계에 해당하는 인터페이스&lt;/p&gt;

&lt;div class=&quot;language-java highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;kd&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;kd&quot;&gt;interface&lt;/span&gt; &lt;span class=&quot;nc&quot;&gt;Step&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;I&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;O&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;&amp;gt;&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;{&lt;/span&gt;
    &lt;span class=&quot;n&quot;&gt;O&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;process&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;I&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;input&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;);&lt;/span&gt;
&lt;span class=&quot;o&quot;&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;h3 id=&quot;pipeline-class&quot;&gt;Pipeline Class&lt;/h3&gt;
&lt;p&gt;각각의 단계를 실제로 실행하는 파이프라인 클래스&lt;/p&gt;

&lt;div class=&quot;language-java highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;kd&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;kd&quot;&gt;class&lt;/span&gt; &lt;span class=&quot;nc&quot;&gt;Pipeline&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;I&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;O&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;&amp;gt;&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;{&lt;/span&gt;
    &lt;span class=&quot;kd&quot;&gt;private&lt;/span&gt; &lt;span class=&quot;kd&quot;&gt;final&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;Step&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;I&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;O&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;&amp;gt;&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;current&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;;&lt;/span&gt;
    
    &lt;span class=&quot;kd&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;Pipeline&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;Step&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;I&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;O&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;&amp;gt;&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;current&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;{&lt;/span&gt;
        &lt;span class=&quot;k&quot;&gt;this&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;current&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;current&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;;&lt;/span&gt;
    &lt;span class=&quot;o&quot;&gt;}&lt;/span&gt;

    &lt;span class=&quot;kd&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;O2&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;&amp;gt;&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;Pipeline&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;I&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;O2&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;&amp;gt;&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;pipe&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;Step&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;O&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;O2&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;&amp;gt;&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;next&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;{&lt;/span&gt;
        &lt;span class=&quot;k&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;new&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;Pipeline&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;&amp;lt;&amp;gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;input&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;-&amp;gt;&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;next&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;process&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;current&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;process&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;input&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;)));&lt;/span&gt;
    &lt;span class=&quot;o&quot;&gt;}&lt;/span&gt;
    
    &lt;span class=&quot;kd&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;O&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;execute&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;I&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;input&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;{&lt;/span&gt;
        &lt;span class=&quot;k&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;current&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;process&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;input&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;);&lt;/span&gt;
    &lt;span class=&quot;o&quot;&gt;}&lt;/span&gt;
&lt;span class=&quot;o&quot;&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;h3 id=&quot;example&quot;&gt;Example&lt;/h3&gt;
&lt;p&gt;문자열 형태의 숫자를 int 형으로 변경 후 2를 곱하는 과정을 파이프로 구성해보자.&lt;/p&gt;

&lt;div class=&quot;language-java highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;kd&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;kd&quot;&gt;class&lt;/span&gt; &lt;span class=&quot;nc&quot;&gt;ExamplePipeline&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;{&lt;/span&gt;
    &lt;span class=&quot;kd&quot;&gt;static&lt;/span&gt; &lt;span class=&quot;kd&quot;&gt;class&lt;/span&gt; &lt;span class=&quot;nc&quot;&gt;StringToIntStep&lt;/span&gt; &lt;span class=&quot;kd&quot;&gt;implements&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;Step&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;String&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;Integer&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;&amp;gt;&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;{&lt;/span&gt;
        &lt;span class=&quot;kd&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;Integer&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;process&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;String&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;input&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;{&lt;/span&gt;
            &lt;span class=&quot;k&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;Integer&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;parseInt&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;input&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;);&lt;/span&gt;
        &lt;span class=&quot;o&quot;&gt;}&lt;/span&gt;
    &lt;span class=&quot;o&quot;&gt;}&lt;/span&gt;
    
    &lt;span class=&quot;kd&quot;&gt;static&lt;/span&gt; &lt;span class=&quot;kd&quot;&gt;class&lt;/span&gt; &lt;span class=&quot;nc&quot;&gt;calculationStep&lt;/span&gt; &lt;span class=&quot;kd&quot;&gt;implements&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;Step&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;Integer&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;Integer&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;&amp;gt;&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;{&lt;/span&gt;
        &lt;span class=&quot;kd&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;Integer&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;process&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;Integer&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;input&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;{&lt;/span&gt;
            &lt;span class=&quot;k&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;input&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;*&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;2&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;;&lt;/span&gt;   
        &lt;span class=&quot;o&quot;&gt;}&lt;/span&gt;
    &lt;span class=&quot;o&quot;&gt;}&lt;/span&gt;
    
    &lt;span class=&quot;kd&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;kd&quot;&gt;static&lt;/span&gt; &lt;span class=&quot;kt&quot;&gt;void&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;main&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;String&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;[]&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;args&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;{&lt;/span&gt;
        &lt;span class=&quot;n&quot;&gt;Pipeline&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;String&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;Integer&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;&amp;gt;&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;pipeline&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;new&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;Pipeline&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;&amp;lt;&amp;gt;(&lt;/span&gt;&lt;span class=&quot;k&quot;&gt;new&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;StringToIntStep&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;())&lt;/span&gt;
            &lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;pipe&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;k&quot;&gt;new&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;calculationStep&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;());&lt;/span&gt;
        &lt;span class=&quot;n&quot;&gt;System&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;out&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;println&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;pipeline&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;execute&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;3&quot;&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;));&lt;/span&gt; &lt;span class=&quot;c1&quot;&gt;// 6 출력&lt;/span&gt;
    &lt;span class=&quot;o&quot;&gt;}&lt;/span&gt;
&lt;span class=&quot;o&quot;&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;</content>

      
      
      
      
      

      <author>
          <name>Saturday</name>
        
        
      </author>

      

      
        <category term="Design Pattern" />
      

      
        <summary type="html">사용 이유 이니시스 빌링 결제 구현 중 본인 인증 -&amp;gt; 빌링 키 발급 -&amp;gt; 빌링 키로 결제 이렇게 세 가지 단계로 진행되는 파이프라인을 구성해야 했다. 본인 인증 결과가 빌링 키 발급의 input 이 되고, 빌링 키 발급의 결과가 빌링 키 결제의 input 이 되는 식이었다. 또 해당 파이프라인 전후로 다른 작업들의 추가 / 삭제가 간편해야 했다. 위의 조건을 만족하는 방법을 찾던 중 이 글을 발견하여, 시스템에 적용하였는데 꽤나 유용한 것 같아 글을 남기기로 하였다.</summary>
      

      
      
    </entry>
  
    <entry>
      <title type="html">Anilist</title>
      <link href="https://disj11.github.io/anilist" rel="alternate" type="text/html" title="Anilist" />
      <published>2019-06-20T23:13:00+00:00</published>
      <updated>2019-06-20T23:13:00+00:00</updated>
      <id>https://disj11.github.io/anilist</id>
      <content type="html" xml:base="https://disj11.github.io/anilist">&lt;p&gt;오래된 포스트 입니다.
새로운 포스팅은 &lt;a href=&quot;/anilist-v2&quot;&gt;여기&lt;/a&gt;에서 확인해주세요.&lt;/p&gt;

&lt;h3 id=&quot;소개&quot;&gt;소개&lt;/h3&gt;
&lt;p&gt;회사에서 사용하는 기술만 사용하다보니, 너무 정체되는 것 같은 생각이 들었다.
요즘 GraphQL, React 같은 글들이 많이 접하여, 이게 뭐지 하고 궁금했던 차에 무언가 하나 만들어 보자는 생각이 들었다.
원래 애니메이션을 좋아했기 때문에 애니메이션 정보를 확인할 수 있는 사이트를 만들기로 했다.
찾다보니 애니메이션, 만화 등의 정보를 GraphQL로 제공해주는 &lt;a href=&quot;https://github.com/AniList/ApiV2-GraphQL-Docs&quot;&gt;사이트&lt;/a&gt;를 발견하였다.
좋아 만들어보자. 하고 2~3일에 걸쳐 사이트를 만들었다.
단순히 GraphQL과 React 가 무엇인지 한번 써보고 싶어 만들었기 때문에, 코드는 안보는 것이 좋을 것 같다.
그래도 보고 싶다면 &lt;a href=&quot;https://github.com/disj11/anilistql-client&quot;&gt;여기&lt;/a&gt;로…&lt;/p&gt;

&lt;h3 id=&quot;사이트-화면&quot;&gt;사이트 화면&lt;/h3&gt;

&lt;table&gt;
  &lt;thead&gt;
    &lt;tr&gt;
      &lt;th style=&quot;text-align: center&quot;&gt;&lt;em&gt;메인 화면&lt;/em&gt;&lt;/th&gt;
    &lt;/tr&gt;
  &lt;/thead&gt;
  &lt;tbody&gt;
    &lt;tr&gt;
      &lt;td style=&quot;text-align: center&quot;&gt;&lt;img src=&quot;/assets/images/anilist-main.png&quot; alt=&quot;메인 화면&quot; /&gt;&lt;/td&gt;
    &lt;/tr&gt;
  &lt;/tbody&gt;
&lt;/table&gt;

&lt;table&gt;
  &lt;thead&gt;
    &lt;tr&gt;
      &lt;th style=&quot;text-align: center&quot;&gt;&lt;em&gt;검색 화면&lt;/em&gt;&lt;/th&gt;
    &lt;/tr&gt;
  &lt;/thead&gt;
  &lt;tbody&gt;
    &lt;tr&gt;
      &lt;td style=&quot;text-align: center&quot;&gt;&lt;img src=&quot;/assets/images/anilist-search.png&quot; alt=&quot;검색 화면&quot; /&gt;&lt;/td&gt;
    &lt;/tr&gt;
  &lt;/tbody&gt;
&lt;/table&gt;

&lt;table&gt;
  &lt;thead&gt;
    &lt;tr&gt;
      &lt;th style=&quot;text-align: center&quot;&gt;&lt;em&gt;상세 화면&lt;/em&gt;&lt;/th&gt;
    &lt;/tr&gt;
  &lt;/thead&gt;
  &lt;tbody&gt;
    &lt;tr&gt;
      &lt;td style=&quot;text-align: center&quot;&gt;&lt;img src=&quot;/assets/images/anilist-detail.png&quot; alt=&quot;상세 화면&quot; /&gt;&lt;/td&gt;
    &lt;/tr&gt;
  &lt;/tbody&gt;
&lt;/table&gt;</content>

      
      
      
      
      

      <author>
          <name>Saturday</name>
        
        
      </author>

      

      
        <category term="Toy Project" />
      

      
        <summary type="html">오래된 포스트 입니다. 새로운 포스팅은 여기에서 확인해주세요.</summary>
      

      
      
    </entry>
  
</feed>
