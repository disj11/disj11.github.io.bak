<?xml version="1.0" encoding="UTF-8"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title> - Articles</title>
    <description>Record my life</description>
    <link>
    https://disj11.github.io</link>
    
      
      <item>
        <title>Pipeline Pattern (파이프라인 패턴)</title>
        
          <description>&lt;h3 id=&quot;사용-이유&quot;&gt;사용 이유&lt;/h3&gt;
&lt;p&gt;이니시스 빌링 결제 구현 중 &lt;code class=&quot;highlighter-rouge&quot;&gt;본인 인증 -&amp;gt; 빌링 키 발급 -&amp;gt; 빌링 키로 결제&lt;/code&gt;
이렇게 세 가지 단계로 진행되는 파이프라인을 구성해야 했다.
본인 인증 결과가 빌링 키 발급의 input 이 되고, 빌링 키 발급의 결과가 빌링 키 결제의 input 이 되는 식이었다.
또 해당 파이프라인 전후로 다른 작업들의 추가 / 삭제가 간편해야 했다. 위의 조건을 만족하는 방법을 찾던 중
&lt;a href=&quot;https://medium.com/@deepakbapat/the-pipeline-design-pattern-in-java-831d9ce2fe21&quot; target=&quot;_blank&quot;&gt;이 글&lt;/a&gt;을
발견하여, 시스템에 적용하였는데 꽤나 유용한 것 같아 글을 남기기로 하였다.&lt;/p&gt;

</description>
        
        <pubDate>Tue, 09 Jul 2019 23:33:00 +0000</pubDate>
        <link>
        https://disj11.github.io/pipeline-pattern</link>
        <guid isPermaLink="true">https://disj11.github.io/pipeline-pattern</guid>
      </item>
      
    
      
      <item>
        <title>애니메이션 정보 확인 사이트 (Toy Project)</title>
        
          <description>&lt;h3 id=&quot;소개&quot;&gt;소개&lt;/h3&gt;
&lt;p&gt;회사에서 사용하는 기술만 사용하다보니, 너무 정체되는 것 같은 생각이 들었다.
요즘 GraphQL, React 같은 글들이 많이 접하여, 이게 뭐지 하고 궁금했던 차에 무언가 하나 만들어 보자는 생각이 들었다.
원래 애니메이션을 좋아했기 때문에 애니메이션 정보를 확인할 수 있는 사이트를 만들기로 했다.
찾다보니 애니메이션, 만화 등의 정보를 GraphQL로 제공해주는 &lt;a href=&quot;https://github.com/AniList/ApiV2-GraphQL-Docs&quot;&gt;사이트&lt;/a&gt;를 발견하였다.
좋아 만들어보자. 하고 2~3일에 걸쳐 사이트를 만들었다.
단순히 GraphQL과 React 가 무엇인지 한번 써보고 싶어 만들었기 때문에, 코드는 안보는 것이 좋을 것 같다.
그래도 보고 싶다면 &lt;a href=&quot;https://github.com/disj11/anilistql-client&quot;&gt;여기&lt;/a&gt;로…&lt;/p&gt;

</description>
        
        <pubDate>Thu, 20 Jun 2019 23:13:00 +0000</pubDate>
        <link>
        https://disj11.github.io/anilist</link>
        <guid isPermaLink="true">https://disj11.github.io/anilist</guid>
      </item>
      
    
      
      <item>
        <title>RBAC (Role Based Access Control - 역할 기반 접근 제어)</title>
        
          <description>&lt;h3 id=&quot;잡담&quot;&gt;잡담&lt;/h3&gt;
&lt;p&gt;역할 기반 접근 제어를 사용할 일이 필요해 검색을 하던 중,
&lt;a href=&quot;https://stackoverflow.com/questions/28157798/is-my-role-based-access-control-a-feasible-solution/28159647#28159647&quot;&gt;좋은 글&lt;/a&gt;을 찾아 포스팅을 하게 되었습니다.
역할 기반 접근 제어의 설명보다는, 구현 방법에 대해 알아보기 위한 글입니다.&lt;/p&gt;

</description>
        
        <pubDate>Sat, 15 Jun 2019 02:30:00 +0000</pubDate>
        <link>
        https://disj11.github.io/role-based-access-control</link>
        <guid isPermaLink="true">https://disj11.github.io/role-based-access-control</guid>
      </item>
      
    
      
      <item>
        <title>Backtracking (되추적 기법)</title>
        
          <description>&lt;h3 id=&quot;backtracking-되추적-기법&quot;&gt;Backtracking (되추적 기법)&lt;/h3&gt;
&lt;p&gt;되추적 기법은 DFS (깊이 우선 탐색)를 이용하여 트리를 순회하며 해를 찾는다.
이때에 중요한 것은, 자식 노드로 갈 땐 항상 해가 있을 수 있는지 없는지 확인을 해 본다는 것이다.
확인한 결과 더 이상 탐색할 필요가 없다면 현재 방향으로는 나아가는 것을 멈추고, 다른 자식 노드로 방향을 바꾼다.
아래의 문제를 통해 자세히 알아보자.&lt;/p&gt;

</description>
        
        <pubDate>Sat, 08 Jun 2019 20:55:00 +0000</pubDate>
        <link>
        https://disj11.github.io/backtracking</link>
        <guid isPermaLink="true">https://disj11.github.io/backtracking</guid>
      </item>
      
    
      
      <item>
        <title>백준 1976 (여행 가자)</title>
        
          <description>&lt;blockquote&gt;
  &lt;p&gt;Union-Find(유니온 파인드)를 활용한 알고리즘 문제를 풀어보았습니다.
해당 문제가 궁금하다면 &lt;a href=&quot;https://www.acmicpc.net/problem/1976&quot; target=&quot;_blank&quot;&gt;여기&lt;/a&gt;를 방문하세요. &lt;br /&gt;
유니온 파인드에 대한 내용이 궁금하다면? &lt;a href=&quot;https://disj11.github.io/union-find&quot; target=&quot;_blank&quot;&gt;이 포스트를 참고&lt;/a&gt;&lt;/p&gt;
&lt;/blockquote&gt;

</description>
        
        <pubDate>Fri, 07 Jun 2019 15:45:00 +0000</pubDate>
        <link>
        https://disj11.github.io/baekjoon-1976</link>
        <guid isPermaLink="true">https://disj11.github.io/baekjoon-1976</guid>
      </item>
      
    
      
      <item>
        <title>백준 1717번 (집합의 표현)</title>
        
          <description>&lt;blockquote&gt;
  &lt;p&gt;Union-Find(유니온 파인드)를 활용한 알고리즘 문제를 풀어보았습니다.
해당 문제가 궁금하다면 &lt;a href=&quot;https://www.acmicpc.net/problem/1717&quot; target=&quot;_blank&quot;&gt;여기&lt;/a&gt;를 방문하세요. &lt;br /&gt;
유니온 파인드에 대한 내용이 궁금하다면? &lt;a href=&quot;https://disj11.github.io/union-find&quot; target=&quot;_blank&quot;&gt;이 포스트를 참고&lt;/a&gt;&lt;/p&gt;
&lt;/blockquote&gt;

</description>
        
        <pubDate>Thu, 06 Jun 2019 18:10:00 +0000</pubDate>
        <link>
        https://disj11.github.io/baekjoon-1717</link>
        <guid isPermaLink="true">https://disj11.github.io/baekjoon-1717</guid>
      </item>
      
    
      
      <item>
        <title>Union-Find (유니온 파인드)</title>
        
          <description>&lt;h3 id=&quot;소개&quot;&gt;소개&lt;/h3&gt;
&lt;blockquote&gt;
  &lt;p&gt;유니온 파인드는 Disjoint Set (서로소 집합) 또는 Merge Find Set (병렬 찾기 집합) 으로 불리며,
말 그대로 서로소인 집합들을 표현하는 자료구조이다.
즉, 어떤 집합 사이에도 교집합의 원소가 하나도 없고, 모든 집합의 합집합은 전체 집합과 같다는 말이다.
기본적으로 union, find 단 2개의 연산만을 지원한다.&lt;/p&gt;
&lt;/blockquote&gt;

</description>
        
        <pubDate>Wed, 05 Jun 2019 23:00:00 +0000</pubDate>
        <link>
        https://disj11.github.io/union-find</link>
        <guid isPermaLink="true">https://disj11.github.io/union-find</guid>
      </item>
      
    
      
      <item>
        <title>백준 1327번 (소트 게임)</title>
        
          <description>&lt;blockquote&gt;
  &lt;p&gt;BSF(Breadth First Search : 너비 우선 탐색)를 활용한 알고리즘 문제를 풀어보았습니다.
해당 문제가 궁금하다면 &lt;a href=&quot;https://www.acmicpc.net/problem/1327&quot; target=&quot;_blank&quot;&gt;여기&lt;/a&gt;를 방문하세요.&lt;/p&gt;
&lt;/blockquote&gt;

</description>
        
        <pubDate>Sun, 02 Jun 2019 01:00:00 +0000</pubDate>
        <link>
        https://disj11.github.io/baekjoon-1327</link>
        <guid isPermaLink="true">https://disj11.github.io/baekjoon-1327</guid>
      </item>
      
    
      
      <item>
        <title>Bit Masking (비트마스킹)</title>
        
          <description>&lt;h3 id=&quot;소개&quot;&gt;소개&lt;/h3&gt;
&lt;blockquote&gt;
  &lt;p&gt;비트는 0, 1의 값을 가질 수 있는 데이터의 최소 단위이다.
비트 마스크는 이러한 비트에 마스크를 씌워 비트의 값에 변화를 주는 행위이다.
이 설명으로는 비트마스킹이 무엇인지 표현이 잘 안되는데, 아래에서 상세히 다뤄보자.&lt;/p&gt;
&lt;/blockquote&gt;

</description>
        
        <pubDate>Sat, 01 Jun 2019 10:47:00 +0000</pubDate>
        <link>
        https://disj11.github.io/bitmasking</link>
        <guid isPermaLink="true">https://disj11.github.io/bitmasking</guid>
      </item>
      
    
      
      <item>
        <title>Inverted index (역색인)</title>
        
          <description>&lt;h3 id=&quot;소개&quot;&gt;소개&lt;/h3&gt;
&lt;blockquote&gt;
  &lt;p&gt;Inverted index(역방향 인덱스)는 대용량 텍스트 검색을 위해서 고안된 방법이다.
요즘 많이 사용하는 해시태그 기능을 구현하고 싶다면 역방향 인덱스 방법을 사용할 수 있다.&lt;/p&gt;
&lt;/blockquote&gt;

</description>
        
        <pubDate>Wed, 24 Apr 2019 16:30:00 +0000</pubDate>
        <link>
        https://disj11.github.io/inverted-index</link>
        <guid isPermaLink="true">https://disj11.github.io/inverted-index</guid>
      </item>
      
    
      
      <item>
        <title>SSE (Server-Sent Events)</title>
        
          <description>&lt;h3 id=&quot;소개&quot;&gt;소개&lt;/h3&gt;
&lt;blockquote&gt;
  &lt;p&gt;실시간으로 웹 애플리게이션 서버에서 클라이언트로 데이터를 전송하는 방법 중 하나이다.
이러한 방법에는 WebSoket을 이용하는 방법도 있지만,
WebSocket은 서버와 클라이언트의 양방향 통신을 하기 위해 사용한다면,
SSE는 서버에서 클라이언트로 데이터를 전송하는 단방향 통신만 필요로 하는 경우 사용한다.&lt;/p&gt;
&lt;/blockquote&gt;

</description>
        
        <pubDate>Fri, 19 Apr 2019 16:30:00 +0000</pubDate>
        <link>
        https://disj11.github.io/server-sent-events</link>
        <guid isPermaLink="true">https://disj11.github.io/server-sent-events</guid>
      </item>
      
    
      
      <item>
        <title>백준 14501번 (퇴사)</title>
        
          <description>&lt;blockquote&gt;
  &lt;p&gt;DP (Dynamic Programing : 동적 프로그래밍)을 활용한 알고리즘 문제를 풀어보았습니다.
해당 문제가 궁금하다면 &lt;a href=&quot;https://www.acmicpc.net/problem/14501&quot; target=&quot;_blank&quot;&gt;여기&lt;/a&gt;를 방문하세요.&lt;/p&gt;
&lt;/blockquote&gt;

</description>
        
        <pubDate>Fri, 19 Apr 2019 15:40:00 +0000</pubDate>
        <link>
        https://disj11.github.io/baekjoon-14501</link>
        <guid isPermaLink="true">https://disj11.github.io/baekjoon-14501</guid>
      </item>
      
    
      
      <item>
        <title>Welcome</title>
        
          <description>&lt;p&gt;잊어도 다시 떠올릴 수 있도록 &lt;em&gt;기록&lt;/em&gt; 하자.&lt;/p&gt;
</description>
        
        <pubDate>Fri, 19 Apr 2019 15:30:00 +0000</pubDate>
        <link>
        https://disj11.github.io/welcome</link>
        <guid isPermaLink="true">https://disj11.github.io/welcome</guid>
      </item>
      
    
  </channel>
</rss>
