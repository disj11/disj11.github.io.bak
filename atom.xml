<?xml version="1.0" encoding="UTF-8"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title> - Articles</title>
    <description>Record my life</description>
    <link>
    https://disj11.github.io</link>
    
      
      <item>
        <title>Logging - Spring AOP</title>
        
          <description>&lt;p&gt;AOP 를 사용하여 로그를 남기는 방법을 예제를 통해 알아보자.&lt;/p&gt;

</description>
        
        <pubDate>Thu, 06 Aug 2020 18:40:00 +0000</pubDate>
        <link>
        https://disj11.github.io/Logging-Spring-AOP</link>
        <guid isPermaLink="true">https://disj11.github.io/Logging-Spring-AOP</guid>
      </item>
      
    
      
      <item>
        <title>Intellij 에서 WSL 사용</title>
        
          <description>&lt;h3 id=&quot;소개&quot;&gt;소개&lt;/h3&gt;
&lt;p&gt;Intellij에서 기본 터미널로 WSL 을 사용하는 방법입니다.
WSL은 이미 설치되어 있다고 가정하였습니다.&lt;/p&gt;

</description>
        
        <pubDate>Fri, 29 May 2020 13:00:00 +0000</pubDate>
        <link>
        https://disj11.github.io/intellij-with-wsl</link>
        <guid isPermaLink="true">https://disj11.github.io/intellij-with-wsl</guid>
      </item>
      
    
      
      <item>
        <title>자바 이미지 리사이징 후 색상이 변경되는 문제</title>
        
          <description>&lt;h3 id=&quot;소개&quot;&gt;소개&lt;/h3&gt;
&lt;p&gt;java 에서 jpg 이미지를 리사이징 후 색상이 이상하게 변경되어 기록&lt;/p&gt;

</description>
        
        <pubDate>Wed, 06 May 2020 18:00:00 +0000</pubDate>
        <link>
        https://disj11.github.io/java-image-resize</link>
        <guid isPermaLink="true">https://disj11.github.io/java-image-resize</guid>
      </item>
      
    
      
      <item>
        <title>Isolation level (격리 수준)</title>
        
          <description>&lt;h3 id=&quot;isolation&quot;&gt;Isolation&lt;/h3&gt;
&lt;p&gt;Isolation은 트랜잭션에서 일관성이 없는 데이터를 표시하는 방법입니다.
isolation level(격리 수준)이 낮을수록 많은 사용자가 동일한 데이터에 동시에 접근할 수 있는 기능이 향상됩니다.
그러나 이는 잘 못된 데이터를 읽거나 데이터의 업데이트가 손실되는 등과 같은 증상을 유발할 수 있습니다.&lt;/p&gt;

</description>
        
        <pubDate>Sat, 16 Nov 2019 16:53:00 +0000</pubDate>
        <link>
        https://disj11.github.io/isolation-level</link>
        <guid isPermaLink="true">https://disj11.github.io/isolation-level</guid>
      </item>
      
    
      
      <item>
        <title>Spring AOP, Proxy (관점 지향 프로그래밍과 프록시)</title>
        
          <description>&lt;h3 id=&quot;spring-aop-aspect-oriented-programming&quot;&gt;Spring AOP (Aspect Oriented Programming)&lt;/h3&gt;
&lt;p&gt;AOP(관점 지향 프로그래밍)는 문제를 해결하기 위한 관심 사항을 핵심 기능과, 공통 부분(Aspect)으로 나누어
공통적인 부분을 각각의 모듈로 만들어 활용하겠다는 것이다. 
스프링에서 사용하는 어노테이션인 &lt;code class=&quot;highlighter-rouge&quot;&gt;@Transaction&lt;/code&gt;, &lt;code class=&quot;highlighter-rouge&quot;&gt;@Async&lt;/code&gt;, &lt;code class=&quot;highlighter-rouge&quot;&gt;@Cacheable&lt;/code&gt; 등은 모두 이러한 AOP를 이용한 것이다.&lt;/p&gt;

</description>
        
        <pubDate>Fri, 15 Nov 2019 12:40:00 +0000</pubDate>
        <link>
        https://disj11.github.io/Spring-AOP-Proxy</link>
        <guid isPermaLink="true">https://disj11.github.io/Spring-AOP-Proxy</guid>
      </item>
      
    
      
      <item>
        <title>스프링 부트 문서 번역 (Spring Boot Reference Documentation)</title>
        
          <description>&lt;h3 id=&quot;소개&quot;&gt;소개&lt;/h3&gt;
&lt;p&gt;영어 공부를 위하여 &lt;a href=&quot;https://docs.spring.io/spring-boot/docs/2.2.0.RELEASE/reference/html/index.html&quot;&gt;Spring Boot Reference Documentation&lt;/a&gt;
를 번역한 프로젝트입니다. 차근차근 진행할 예정입니다.&lt;/p&gt;

</description>
        
        <pubDate>Tue, 29 Oct 2019 20:48:00 +0000</pubDate>
        <link>
        https://disj11.github.io/spring-boot-reference-docs</link>
        <guid isPermaLink="true">https://disj11.github.io/spring-boot-reference-docs</guid>
      </item>
      
    
      
      <item>
        <title>애니메이션 정보 확인 사이트 V2 (Toy Project)</title>
        
          <description>&lt;h3 id=&quot;소개&quot;&gt;소개&lt;/h3&gt;
&lt;p&gt;연습삼아 만들어 본 애니메이션 정보 확인 사이트&lt;/p&gt;

</description>
        
        <pubDate>Fri, 04 Oct 2019 18:40:00 +0000</pubDate>
        <link>
        https://disj11.github.io/anilist-v2</link>
        <guid isPermaLink="true">https://disj11.github.io/anilist-v2</guid>
      </item>
      
    
      
      <item>
        <title>Trie (트라이)</title>
        
          <description>&lt;h3 id=&quot;소개&quot;&gt;소개&lt;/h3&gt;
&lt;p&gt;트라이라는 자료구조의 명칭은 Re&lt;strong&gt;trie&lt;/strong&gt;val(탐색)에서 유래되었다고 한다.
유래에서 알 수 있 듯 트라이는 문자열을 효율적으로 검색하기 위한 자료구조 중 하나이다.&lt;/p&gt;

</description>
        
        <pubDate>Thu, 15 Aug 2019 16:01:00 +0000</pubDate>
        <link>
        https://disj11.github.io/trie</link>
        <guid isPermaLink="true">https://disj11.github.io/trie</guid>
      </item>
      
    
      
      <item>
        <title>MyBatis 1:1, 1:N 관계 매핑 (association, collection)</title>
        
          <description>&lt;h3 id=&quot;소개&quot;&gt;소개&lt;/h3&gt;
&lt;p&gt;MyBatis 에서 1:1, 1:N 관계를 매핑하기 위해서는 어떻게 해야할까?
1:1 관계 매핑을 위한 association, 1:N 관계 매핑을 위한 collection 에 대해 알아보자.&lt;/p&gt;

</description>
        
        <pubDate>Wed, 24 Jul 2019 21:13:00 +0000</pubDate>
        <link>
        https://disj11.github.io/relationship-in-mybatis</link>
        <guid isPermaLink="true">https://disj11.github.io/relationship-in-mybatis</guid>
      </item>
      
    
      
      <item>
        <title>Pipeline Pattern (파이프라인 패턴)</title>
        
          <description>&lt;h3 id=&quot;사용-이유&quot;&gt;사용 이유&lt;/h3&gt;
&lt;p&gt;이니시스 빌링 결제 구현 중 &lt;code class=&quot;highlighter-rouge&quot;&gt;본인 인증 -&amp;gt; 빌링 키 발급 -&amp;gt; 빌링 키로 결제&lt;/code&gt;
이렇게 세 가지 단계로 진행되는 파이프라인을 구성해야 했다.
본인 인증 결과가 빌링 키 발급의 input 이 되고, 빌링 키 발급의 결과가 빌링 키 결제의 input 이 되는 식이었다.
또 해당 파이프라인 전후로 다른 작업들의 추가 / 삭제가 간편해야 했다. 위의 조건을 만족하는 방법을 찾던 중
&lt;a href=&quot;https://medium.com/@deepakbapat/the-pipeline-design-pattern-in-java-831d9ce2fe21&quot; target=&quot;_blank&quot;&gt;이 글&lt;/a&gt;을
발견하여, 시스템에 적용하였는데 꽤나 유용한 것 같아 글을 남기기로 하였다.&lt;/p&gt;

</description>
        
        <pubDate>Tue, 09 Jul 2019 23:33:00 +0000</pubDate>
        <link>
        https://disj11.github.io/pipeline-pattern</link>
        <guid isPermaLink="true">https://disj11.github.io/pipeline-pattern</guid>
      </item>
      
    
      
      <item>
        <title>Anilist</title>
        
          <description>&lt;p&gt;오래된 포스트 입니다.
새로운 포스팅은 &lt;a href=&quot;/anilist-v2&quot;&gt;여기&lt;/a&gt;에서 확인해주세요.&lt;/p&gt;

</description>
        
        <pubDate>Thu, 20 Jun 2019 23:13:00 +0000</pubDate>
        <link>
        https://disj11.github.io/anilist</link>
        <guid isPermaLink="true">https://disj11.github.io/anilist</guid>
      </item>
      
    
      
      <item>
        <title>RBAC (Role Based Access Control - 역할 기반 접근 제어)</title>
        
          <description>&lt;h3 id=&quot;잡담&quot;&gt;잡담&lt;/h3&gt;
&lt;p&gt;역할 기반 접근 제어를 사용할 일이 필요해 검색을 하던 중,
&lt;a href=&quot;https://stackoverflow.com/questions/28157798/is-my-role-based-access-control-a-feasible-solution/28159647#28159647&quot;&gt;좋은 글&lt;/a&gt;을 찾아 포스팅을 하게 되었습니다.
역할 기반 접근 제어의 설명보다는, 구현 방법에 대해 알아보기 위한 글입니다.&lt;/p&gt;

</description>
        
        <pubDate>Sat, 15 Jun 2019 02:30:00 +0000</pubDate>
        <link>
        https://disj11.github.io/role-based-access-control</link>
        <guid isPermaLink="true">https://disj11.github.io/role-based-access-control</guid>
      </item>
      
    
      
      <item>
        <title>Backtracking (되추적 기법)</title>
        
          <description>&lt;h3 id=&quot;backtracking-되추적-기법&quot;&gt;Backtracking (되추적 기법)&lt;/h3&gt;
&lt;p&gt;되추적 기법은 DFS (깊이 우선 탐색)를 이용하여 트리를 순회하며 해를 찾는다.
이때에 중요한 것은, 자식 노드로 갈 땐 항상 해가 있을 수 있는지 없는지 확인을 해 본다는 것이다.
확인한 결과 더 이상 탐색할 필요가 없다면 현재 방향으로는 나아가는 것을 멈추고, 다른 자식 노드로 방향을 바꾼다.
아래의 문제를 통해 자세히 알아보자.&lt;/p&gt;

</description>
        
        <pubDate>Sat, 08 Jun 2019 20:55:00 +0000</pubDate>
        <link>
        https://disj11.github.io/backtracking</link>
        <guid isPermaLink="true">https://disj11.github.io/backtracking</guid>
      </item>
      
    
      
      <item>
        <title>백준 1976 (여행 가자)</title>
        
          <description>&lt;blockquote&gt;
  &lt;p&gt;Union-Find(유니온 파인드)를 활용한 알고리즘 문제를 풀어보았습니다.
해당 문제가 궁금하다면 &lt;a href=&quot;https://www.acmicpc.net/problem/1976&quot; target=&quot;_blank&quot;&gt;여기&lt;/a&gt;를 방문하세요. &lt;br /&gt;
유니온 파인드에 대한 내용이 궁금하다면? &lt;a href=&quot;https://disj11.github.io/union-find&quot; target=&quot;_blank&quot;&gt;이 포스트를 참고&lt;/a&gt;&lt;/p&gt;
&lt;/blockquote&gt;

</description>
        
        <pubDate>Fri, 07 Jun 2019 15:45:00 +0000</pubDate>
        <link>
        https://disj11.github.io/baekjoon-1976</link>
        <guid isPermaLink="true">https://disj11.github.io/baekjoon-1976</guid>
      </item>
      
    
      
      <item>
        <title>백준 1717번 (집합의 표현)</title>
        
          <description>&lt;blockquote&gt;
  &lt;p&gt;Union-Find(유니온 파인드)를 활용한 알고리즘 문제를 풀어보았습니다.
해당 문제가 궁금하다면 &lt;a href=&quot;https://www.acmicpc.net/problem/1717&quot; target=&quot;_blank&quot;&gt;여기&lt;/a&gt;를 방문하세요. &lt;br /&gt;
유니온 파인드에 대한 내용이 궁금하다면? &lt;a href=&quot;https://disj11.github.io/union-find&quot; target=&quot;_blank&quot;&gt;이 포스트를 참고&lt;/a&gt;&lt;/p&gt;
&lt;/blockquote&gt;

</description>
        
        <pubDate>Thu, 06 Jun 2019 18:10:00 +0000</pubDate>
        <link>
        https://disj11.github.io/baekjoon-1717</link>
        <guid isPermaLink="true">https://disj11.github.io/baekjoon-1717</guid>
      </item>
      
    
      
      <item>
        <title>Union-Find (유니온 파인드)</title>
        
          <description>&lt;h3 id=&quot;소개&quot;&gt;소개&lt;/h3&gt;
&lt;blockquote&gt;
  &lt;p&gt;유니온 파인드는 Disjoint Set (서로소 집합) 또는 Merge Find Set (병렬 찾기 집합) 으로 불리며,
말 그대로 서로소인 집합들을 표현하는 자료구조이다.
즉, 어떤 집합 사이에도 교집합의 원소가 하나도 없고, 모든 집합의 합집합은 전체 집합과 같다는 말이다.
기본적으로 union, find 단 2개의 연산만을 지원한다.&lt;/p&gt;
&lt;/blockquote&gt;

</description>
        
        <pubDate>Wed, 05 Jun 2019 23:00:00 +0000</pubDate>
        <link>
        https://disj11.github.io/union-find</link>
        <guid isPermaLink="true">https://disj11.github.io/union-find</guid>
      </item>
      
    
      
      <item>
        <title>백준 1327번 (소트 게임)</title>
        
          <description>&lt;blockquote&gt;
  &lt;p&gt;BSF(Breadth First Search : 너비 우선 탐색)를 활용한 알고리즘 문제를 풀어보았습니다.
해당 문제가 궁금하다면 &lt;a href=&quot;https://www.acmicpc.net/problem/1327&quot; target=&quot;_blank&quot;&gt;여기&lt;/a&gt;를 방문하세요.&lt;/p&gt;
&lt;/blockquote&gt;

</description>
        
        <pubDate>Sun, 02 Jun 2019 01:00:00 +0000</pubDate>
        <link>
        https://disj11.github.io/baekjoon-1327</link>
        <guid isPermaLink="true">https://disj11.github.io/baekjoon-1327</guid>
      </item>
      
    
      
      <item>
        <title>Bit Masking (비트마스킹)</title>
        
          <description>&lt;h3 id=&quot;소개&quot;&gt;소개&lt;/h3&gt;
&lt;blockquote&gt;
  &lt;p&gt;비트는 0, 1의 값을 가질 수 있는 데이터의 최소 단위이다.
비트 마스크는 이러한 비트에 마스크를 씌워 비트의 값에 변화를 주는 행위이다.
이 설명으로는 비트마스킹이 무엇인지 표현이 잘 안되는데, 아래에서 상세히 다뤄보자.&lt;/p&gt;
&lt;/blockquote&gt;

</description>
        
        <pubDate>Sat, 01 Jun 2019 10:47:00 +0000</pubDate>
        <link>
        https://disj11.github.io/bitmasking</link>
        <guid isPermaLink="true">https://disj11.github.io/bitmasking</guid>
      </item>
      
    
      
      <item>
        <title>Inverted index (역색인)</title>
        
          <description>&lt;h3 id=&quot;소개&quot;&gt;소개&lt;/h3&gt;
&lt;blockquote&gt;
  &lt;p&gt;Inverted index(역방향 인덱스)는 대용량 텍스트 검색을 위해서 고안된 방법이다.
요즘 많이 사용하는 해시태그 기능을 구현하고 싶다면 역방향 인덱스 방법을 사용할 수 있다.&lt;/p&gt;
&lt;/blockquote&gt;

</description>
        
        <pubDate>Wed, 24 Apr 2019 16:30:00 +0000</pubDate>
        <link>
        https://disj11.github.io/inverted-index</link>
        <guid isPermaLink="true">https://disj11.github.io/inverted-index</guid>
      </item>
      
    
      
      <item>
        <title>SSE (Server-Sent Events)</title>
        
          <description>&lt;h3 id=&quot;소개&quot;&gt;소개&lt;/h3&gt;
&lt;blockquote&gt;
  &lt;p&gt;실시간으로 웹 애플리게이션 서버에서 클라이언트로 데이터를 전송하는 방법 중 하나이다.
이러한 방법에는 WebSoket을 이용하는 방법도 있지만,
WebSocket은 서버와 클라이언트의 양방향 통신을 하기 위해 사용한다면,
SSE는 서버에서 클라이언트로 데이터를 전송하는 단방향 통신만 필요로 하는 경우 사용한다.&lt;/p&gt;
&lt;/blockquote&gt;

</description>
        
        <pubDate>Fri, 19 Apr 2019 16:30:00 +0000</pubDate>
        <link>
        https://disj11.github.io/server-sent-events</link>
        <guid isPermaLink="true">https://disj11.github.io/server-sent-events</guid>
      </item>
      
    
      
      <item>
        <title>백준 14501번 (퇴사)</title>
        
          <description>&lt;blockquote&gt;
  &lt;p&gt;DP (Dynamic Programing : 동적 프로그래밍)을 활용한 알고리즘 문제를 풀어보았습니다.
해당 문제가 궁금하다면 &lt;a href=&quot;https://www.acmicpc.net/problem/14501&quot; target=&quot;_blank&quot;&gt;여기&lt;/a&gt;를 방문하세요.&lt;/p&gt;
&lt;/blockquote&gt;

</description>
        
        <pubDate>Fri, 19 Apr 2019 15:40:00 +0000</pubDate>
        <link>
        https://disj11.github.io/baekjoon-14501</link>
        <guid isPermaLink="true">https://disj11.github.io/baekjoon-14501</guid>
      </item>
      
    
      
      <item>
        <title>Welcome</title>
        
          <description>&lt;p&gt;잊어도 다시 떠올릴 수 있도록 &lt;em&gt;기록&lt;/em&gt; 하자.&lt;/p&gt;
</description>
        
        <pubDate>Fri, 19 Apr 2019 15:30:00 +0000</pubDate>
        <link>
        https://disj11.github.io/welcome</link>
        <guid isPermaLink="true">https://disj11.github.io/welcome</guid>
      </item>
      
    
  </channel>
</rss>
