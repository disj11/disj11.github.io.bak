<?xml version="1.0" encoding="UTF-8"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title> - Articles</title>
    <description>Record my life</description>
    <link>
    https://disj11.github.io</link>
    
      
      <item>
        <title>백준 1976 (여행 가자)</title>
        
          <description>&lt;blockquote&gt;
  &lt;p&gt;Union-Find(유니온 파인드)를 활용한 알고리즘 문제를 풀어보았습니다.
해당 문제가 궁금하다면 &lt;a href=&quot;https://www.acmicpc.net/problem/1976&quot; target=&quot;_blank&quot;&gt;여기&lt;/a&gt;를 방문하세요. &lt;br /&gt;
유니온 파인드에 대한 내용이 궁금하다면? &lt;a href=&quot;https://disj11.github.io/union-find&quot; target=&quot;_blank&quot;&gt;이 포스트를 참고&lt;/a&gt;&lt;/p&gt;
&lt;/blockquote&gt;

</description>
        
        <pubDate>Fri, 07 Jun 2019 15:45:00 +0000</pubDate>
        <link>
        https://disj11.github.io/baekjoon-1976</link>
        <guid isPermaLink="true">https://disj11.github.io/baekjoon-1976</guid>
      </item>
      
    
      
      <item>
        <title>백준 1717번 (집합의 표현)</title>
        
          <description>&lt;blockquote&gt;
  &lt;p&gt;Union-Find(유니온 파인드)를 활용한 알고리즘 문제를 풀어보았습니다.
해당 문제가 궁금하다면 &lt;a href=&quot;https://www.acmicpc.net/problem/1717&quot; target=&quot;_blank&quot;&gt;여기&lt;/a&gt;를 방문하세요. &lt;br /&gt;
유니온 파인드에 대한 내용이 궁금하다면? &lt;a href=&quot;https://disj11.github.io/union-find&quot; target=&quot;_blank&quot;&gt;이 포스트를 참고&lt;/a&gt;&lt;/p&gt;
&lt;/blockquote&gt;

</description>
        
        <pubDate>Thu, 06 Jun 2019 18:10:00 +0000</pubDate>
        <link>
        https://disj11.github.io/baekjoon-1717</link>
        <guid isPermaLink="true">https://disj11.github.io/baekjoon-1717</guid>
      </item>
      
    
      
      <item>
        <title>Union-Find (유니온 파인드)</title>
        
          <description>&lt;h3 id=&quot;소개&quot;&gt;소개&lt;/h3&gt;
&lt;blockquote&gt;
  &lt;p&gt;유니온 파인드는 Disjoint Set (서로소 집합) 또는 Merge Find Set (병렬 찾기 집합) 으로 불리며,
말 그대로 서로소인 집합들을 표현하는 자료구조이다.
즉, 어떤 집합 사이에도 교집합의 원소가 하나도 없고, 모든 집합의 합집합은 전체 집합과 같다는 말이다.
기본적으로 union, find 단 2개의 연산만을 지원한다.&lt;/p&gt;
&lt;/blockquote&gt;

</description>
        
        <pubDate>Wed, 05 Jun 2019 23:00:00 +0000</pubDate>
        <link>
        https://disj11.github.io/union-find</link>
        <guid isPermaLink="true">https://disj11.github.io/union-find</guid>
      </item>
      
    
      
      <item>
        <title>백준 1327번 (소트 게임)</title>
        
          <description>&lt;blockquote&gt;
  &lt;p&gt;BSF(Breadth First Search : 너비 우선 탐색)를 활용한 알고리즘 문제를 풀어보았습니다.
해당 문제가 궁금하다면 &lt;a href=&quot;https://www.acmicpc.net/problem/1327&quot; target=&quot;_blank&quot;&gt;여기&lt;/a&gt;를 방문하세요.&lt;/p&gt;
&lt;/blockquote&gt;

</description>
        
        <pubDate>Sun, 02 Jun 2019 01:00:00 +0000</pubDate>
        <link>
        https://disj11.github.io/baekjoon-1327</link>
        <guid isPermaLink="true">https://disj11.github.io/baekjoon-1327</guid>
      </item>
      
    
      
      <item>
        <title>Bit Masking (비트마스킹)</title>
        
          <description>&lt;h3 id=&quot;소개&quot;&gt;소개&lt;/h3&gt;
&lt;blockquote&gt;
  &lt;p&gt;비트는 0, 1의 값을 가질 수 있는 데이터의 최소 단위이다.
비트 마스크는 이러한 비트에 마스크를 씌워 비트의 값에 변화를 주는 행위이다.
이 설명으로는 비트마스킹이 무엇인지 표현이 잘 안되는데, 아래에서 상세히 다뤄보자.&lt;/p&gt;
&lt;/blockquote&gt;

</description>
        
        <pubDate>Sat, 01 Jun 2019 10:47:00 +0000</pubDate>
        <link>
        https://disj11.github.io/bitmasking</link>
        <guid isPermaLink="true">https://disj11.github.io/bitmasking</guid>
      </item>
      
    
      
      <item>
        <title>Inverted index (역색인)</title>
        
          <description>&lt;h3 id=&quot;소개&quot;&gt;소개&lt;/h3&gt;
&lt;blockquote&gt;
  &lt;p&gt;Inverted index(역방향 인덱스)는 대용량 텍스트 검색을 위해서 고안된 방법이다.
요즘 많이 사용하는 해시태그 기능을 구현하고 싶다면 역방향 인덱스 방법을 사용할 수 있다.&lt;/p&gt;
&lt;/blockquote&gt;

</description>
        
        <pubDate>Wed, 24 Apr 2019 16:30:00 +0000</pubDate>
        <link>
        https://disj11.github.io/inverted-index</link>
        <guid isPermaLink="true">https://disj11.github.io/inverted-index</guid>
      </item>
      
    
      
      <item>
        <title>SSE (Server-Sent Events)</title>
        
          <description>&lt;h3 id=&quot;소개&quot;&gt;소개&lt;/h3&gt;
&lt;blockquote&gt;
  &lt;p&gt;실시간으로 웹 애플리게이션 서버에서 클라이언트로 데이터를 전송하는 방법 중 하나이다.
이러한 방법에는 WebSoket을 이용하는 방법도 있지만,
WebSocket은 서버와 클라이언트의 양방향 통신을 하기 위해 사용한다면,
SSE는 서버에서 클라이언트로 데이터를 전송하는 단방향 통신만 필요로 하는 경우 사용한다.&lt;/p&gt;
&lt;/blockquote&gt;

</description>
        
        <pubDate>Fri, 19 Apr 2019 16:30:00 +0000</pubDate>
        <link>
        https://disj11.github.io/server-sent-events</link>
        <guid isPermaLink="true">https://disj11.github.io/server-sent-events</guid>
      </item>
      
    
      
      <item>
        <title>백준 14501번 (퇴사)</title>
        
          <description>&lt;blockquote&gt;
  &lt;p&gt;DP (Dynamic Programing : 동적 프로그래밍)을 활용한 알고리즘 문제를 풀어보았습니다.
해당 문제가 궁금하다면 &lt;a href=&quot;https://www.acmicpc.net/problem/14501&quot; target=&quot;_blank&quot;&gt;여기&lt;/a&gt;를 방문하세요.&lt;/p&gt;
&lt;/blockquote&gt;

</description>
        
        <pubDate>Fri, 19 Apr 2019 15:40:00 +0000</pubDate>
        <link>
        https://disj11.github.io/baekjoon-14501</link>
        <guid isPermaLink="true">https://disj11.github.io/baekjoon-14501</guid>
      </item>
      
    
      
      <item>
        <title>Welcome</title>
        
          <description>&lt;p&gt;안녕하세요. 생각을 기록할 곳이 필요해 만든 블로그입니다.&lt;/p&gt;

</description>
        
        <pubDate>Fri, 19 Apr 2019 15:30:00 +0000</pubDate>
        <link>
        https://disj11.github.io/welcome</link>
        <guid isPermaLink="true">https://disj11.github.io/welcome</guid>
      </item>
      
    
  </channel>
</rss>
